version: "3.2"

services: 
    # http://localhost:8080/
    restsimulator :
        container_name: restsimulator
        hostname: restsimulator
        image: jetty:9.4-jre11
        networks:
            service_tier:
                aliases:
                - restsimulator
        ports: 
        - "8080:8080"
        depends_on:
            db:
                condition: service_healthy
        volumes:
        - ./target/com619-devops-project-ae1-0.0.1-SNAPSHOT.war:/var/lib/jetty/webapps/root.war
            
    nginxserver :
        container_name: nginxserver
        hostname: nginxserver
        image: nginx:latest
        networks:
            service_tier:
        ports:
        - "80:80"
        - "443:443"
        depends_on:
            - restsimulator
        volumes:
        - ./server/nginx/default.conf:/etc/nginx/conf.d/default.conf
        - ./server/certbot/conf:/etc/letsencrypt
        - ./server/certbot/www:/var/www/certbot

    certbot:
        image: certbot/certbot
        container_name: certbot
        depends_on:
            - nginxserver
        volumes:
        - ./server/certbot/conf:/etc/letsencrypt
        - ./server/certbot/www:/var/www/certbot
        command: certonly --webroot -w /var/www/certbot/  --staging --force-renewal --email 5dawes65@solent.ac.uk -d com619-1-vm.uksouth.cloudapp.azure.com --agree-tos 

    db:
        image: mysql:8.0
        restart: always
        networks:
            service_tier:
        environment:
          MYSQL_DATABASE: 'db'
          # So you don't have to use root, but you can if you like
          MYSQL_USER: 'user'
          # You can use whatever password you like
          MYSQL_PASSWORD: 'userpassword'
          # Password for root access
          MYSQL_ROOT_PASSWORD: 'rootpassword'
        healthcheck:
            test: "/usr/bin/mysql --user=root --password=rootpassword --execute \"SHOW DATABASES;\""
            interval: 2s
            timeout: 20s
            retries: 10
        ports:
          # <Port exposed> : <MySQL Port running inside container>
          - '3306:3306'
        expose:
          # Opens port 3306 on the container
          - '3306'
          # Where our data will be persisted
        volumes:
          - ./server/my-db:/var/lib/mysql
          - ./server/init:/docker-entrypoint-initdb.d:ro


networks:
    service_tier:
        name: service_tier
